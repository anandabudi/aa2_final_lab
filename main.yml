---
- name: Play to automate process
  hosts: all
  vars:
    service_user_name: devops
    service_user_password: redhat
    ssh_key_path: /home/devops/.ssh/
    ssh_key_name: id_rsa
    satellite_activationkey: gpte-labs-rhel8
    satellite_org: prod

  tasks:
    - name: install katello-ca-consumer package
      yum:
        name: http://satellite.example.com/pub/katello-ca-consumer-latest.noarch.rpm
        state: present
        disable_gpg_check: true

    - name: register system and attach subs
      redhat_subscription:
        state: present
        activationkey: "{{ satellite_activationkey }}"
        org_id: "{{ satellite_org }}"
        auto_attach: true

- name: Deploy, configure, and populate Postgres 10
  hosts: database_servers
  roles:
    - role: firewall
      vars:
        firewall_services:
          - postgresql
        firewall_tcp_ports:
          - 5432
    - role: postgresql-server

  gather_facts: false
  tags:
    - database_servers

- name: Deploy, configure, and populate flask repo and virtualenv
  hosts: app_servers
  become: true
  gather_facts: false
  tags:
    - application_servers
    - flask
  roles:
    - role: firewall
      vars:
        firewall_services:
          - http
        firewall_tcp_ports:
          - 8080
    - role: flask
    
- name: Deploy haproxy load balancer
  hosts: load_balancers
  gather_facts: false 

  tags:
    - load_balancers
  
  roles:
    - role: firewall
      vars:
        firewall_services:
          - http
        firewall_tcp_ports:
          - 5000
    - role: haproxy

- name: End to end smoke tests
  hosts: app_servers:database_servers
  gather_facts: true
  tags:
    - smoketest  

  tasks:

    - name: Smoketest Postgres database
      postgresql_ping:
        db: flask_db
        login_host: "{{ groups.database_servers[0] }}"
        login_user: flask
        login_password: redhat
        ssl_mode: disable
      delegate_to: "{{ groups.app_servers[0] }}"
      run_once: true
      tags:
        - smoketest

- name: End to end smoke tests
  hosts: app_servers
  become: false
  gather_facts: false
  tags:
    - smoketest  
  tasks:
 
    - name: Check webserver for correct response
      uri:
        url: "http://frontend1/ping"
        return_content: yes
      until: '"alive" in result.content'
      retries: 10
      delay: 1
      register: result
      delegate_to: localhost
